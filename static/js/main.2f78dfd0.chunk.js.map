{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Kweet.js","components/KweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Kweet","kweetObj","isOwner","editing","setEditing","text","newKweet","setNewKweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","faTrash","faPencilAlt","KweetFactory","userObj","kweet","setKweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","createId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","kweets","setKweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f78dfd0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUKET,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const firebaseInstance = firebase;\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore(); \r\n  export const storageService = firebase.storage();","import { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {name, value},\r\n        } = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit =  async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else{\r\n                //login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"계정 생성\" : \"로그인\"} className=\"authInput authSubmit\"/>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"가입된 회원\" : \"계정 생성\"}\r\n        </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{marginBottom: 30}}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                <FontAwesomeIcon icon={faGoogle} size=\"2x\"/>\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                <FontAwesomeIcon icon={faGithub} size=\"2x\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Kweet = ({kweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newKweet, setNewKweet] = useState(kweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok){\r\n            const data = await dbService.doc(`kweets/${kweetObj.id}`).delete();\r\n            if(kweetObj.attachmentUrl !== \"\")\r\n            await storageService.refFromURL(kweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewKweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`kweets/${kweetObj.id}`).update({text:newKweet});\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"kweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container kweetEdit\">\r\n                        <input\r\n                         onChange={onChange} \r\n                         value={newKweet} \r\n                         required\r\n                         placeholder =\"키윗 고치기\"\r\n                         className=\"formInput\" \r\n                        />\r\n                        <input type=\"submit\" value=\"업데이트\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancleBtn\">\r\n                        취소\r\n                    </button>\r\n                </>\r\n            ):(\r\n                <>\r\n                <h4>{kweetObj.text}</h4>\r\n                {kweetObj.attachmentUrl && (\r\n                    <img src={kweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                )}\r\n                {isOwner && (\r\n                <div className=\"kweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash}/>\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt}/>\r\n                    </span>\r\n                </div>\r\n            )}\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Kweet;","import {v4 as uuidv4} from 'uuid';\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst KweetFactory = ({userObj}) => {\r\n    const [kweet, setKweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(kweet === \"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"kweets\").add({\r\n            text: kweet,\r\n            createAt: Date.now(),\r\n            createId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setKweet(\"\");\r\n        setAttachment(\"\")\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setKweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) =>{\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n          }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n\r\n    return(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n        <input\r\n        className=\"factoryInput__input\"\r\n         value={kweet}\r\n         onChange={onChange}\r\n         type=\"text\"\r\n         placeholder=\"무슨 생각을 하시고 계신가요?\"\r\n         maxLength={240}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n        </div>\r\n        <label htmlFor=\"attach-file\" className=\"factoryInput__laber\">\r\n            <span>  사진 추가하기  </span>\r\n            <FontAwesomeIcon icon={faPlus}/>\r\n        </label>\r\n        <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n                opacity: 0,\r\n            }}\r\n        />\r\n        {attachment &&(\r\n            <div className=\"factoryForm__attachment\">\r\n                 <img \r\n                    src={attachment} \r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </div>\r\n            </div>\r\n        )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default KweetFactory;","import Kweet from \"components/Kweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport KweetFactory from \"components/KweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [kweets, setKweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n          .collection(\"kweets\")\r\n          .orderBy(\"createAt\", \"desc\")\r\n          .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n              id: document.id,\r\n              ...document.data(),\r\n            }));\r\n            setKweets(newArray);\r\n          });\r\n      }, []);\r\n\r\n\r\n   \r\n    return (\r\n    <div className=\"container\">\r\n       <KweetFactory userObj={userObj}/>\r\n        <div style={{marginTop: 30}}>\r\n            {kweets.map((kweet) => (\r\n               <Kweet \r\n                key={kweet.id} \r\n                kweetObj={kweet}\r\n                isOwner = {kweet.createId === userObj.uid}    \r\n            />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"이름을 적어주세요\"\r\n                value={newDisplayName}\r\n                autoFocus\r\n                className=\"formInput\"\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"프로필 수정하기\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            로그 아웃\r\n        </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { size } from \"lodash\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{marginRight: 10}}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link \r\n                     to=\"/profile\"\r\n                     style={{\r\n                         marginLeft: 10,\r\n                         display: \"flex\",\r\n                         flexDirection: \"column\",\r\n                         alignItems: \"center\",\r\n                         fontSize: 12,\r\n                     }}\r\n                     >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\r\n                        <span style={{marginTop: 10}}>\r\n                            {userObj.displayName\r\n                              ? `${userObj.displayName}님의 프로필`\r\n                              : \"프로필\"}\r\n                        </span>     \r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) =>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                     style={{\r\n                         maxWidth: 890,\r\n                         width: \"100%\",\r\n                         margin: \"0 auto\",\r\n                         marginTop: 80,\r\n                         display: \"flex\",\r\n                         justifyContent: \"center\",\r\n                     }}\r\n                    >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}