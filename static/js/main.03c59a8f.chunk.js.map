{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Kweet.js","components/KweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Kweet","kweetObj","isOwner","editing","setEditing","text","newKweet","setNewKweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","KweetFactory","userObj","kweet","setKweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","createId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","kweets","setKweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03c59a8f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUKET,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const firebaseInstance = firebase;\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore(); \r\n  export const storageService = firebase.storage();","import { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {name, value},\r\n        } = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit =  async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else{\r\n                //login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Kweet = ({kweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newKweet, setNewKweet] = useState(kweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok){\r\n            const data = await dbService.doc(`kweets/${kweetObj.id}`).delete();\r\n            if(kweetObj.attachmentUrl !== \"\")\r\n            await storageService.refFromURL(kweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewKweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`kweets/${kweetObj.id}`).update({text:newKweet});\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newKweet} required/>\r\n                        <input type=\"submit\" value=\"Update Kweet\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancle</button>\r\n                </>\r\n            ):(\r\n                <>\r\n                <h4>{kweetObj.text}</h4>\r\n                {kweetObj.attachmentUrl && (\r\n                    <img src={kweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                )}\r\n                {isOwner && (\r\n                <>\r\n                <button onClick={onDeleteClick}>Delete Kweet</button>\r\n                <button onClick={toggleEditing}>Edit Kweet</button>\r\n                </>\r\n            )}\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Kweet;","import {v4 as uuidv4} from 'uuid';\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { useState } from 'react';\r\n\r\nconst KweetFactory = ({userObj}) => {\r\n    const [kweet, setKweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"kweets\").add({\r\n            text: kweet,\r\n            createAt: Date.now(),\r\n            createId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setKweet(\"\");\r\n        setAttachment(\"\")\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setKweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) =>{\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n\r\n    return(\r\n    <form onSubmit={onSubmit}>\r\n        <input\r\n         value={kweet}\r\n         onChange={onChange}\r\n         type=\"text\"\r\n         placeholder=\"what's on your mind?\"\r\n         maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n        <input type=\"submit\" value=\"Kweet\"/>\r\n        {attachment &&(\r\n            <div>\r\n                 <img src={attachment} width=\"50px\" height=\"50px\"/>\r\n                 <button onClick={onClearAttachment}>Clear</button>\r\n            </div>\r\n        )}\r\n    </form>\r\n    )\r\n};\r\n\r\nexport default KweetFactory;","import Kweet from \"components/Kweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport KweetFactory from \"components/KweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [kweets, setKweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"kweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setKweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n\r\n   \r\n    return (\r\n    <>\r\n       <KweetFactory userObj={userObj}/>\r\n        <div>\r\n            {kweets.map((kweet) => (\r\n               <Kweet \r\n                key={kweet.id} \r\n                kweetObj={kweet}\r\n                isOwner = {kweet.createId === userObj.uid}    \r\n            />\r\n            ))}\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n            />\r\n            <input type=\"submit\" value=\"Update Profile\"/>\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) =>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() =>{\n    authService.onAuthStateChanged((user) =>{\n      if(user){\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return(\n    <>\n      {init ? (\n      <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/>\n      ) : (\n        \"initializing...\"\n      )}\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}